version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: farmacia_postgres_${NODE_ENV}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - farmacia_network
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: farmacia_backend_${NODE_ENV}
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      DATABASE_URL: postgresql://${DB_USER:-admin}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
      FRONTEND_URL: https://${FRONTEND_DOMAIN}
      CORS_ORIGIN: https://${FRONTEND_DOMAIN}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - farmacia_network
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${API_DOMAIN}`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.docker.network=dokploy-network"

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: https://${API_DOMAIN}/api
        REACT_APP_ENV: ${NODE_ENV}
    container_name: farmacia_frontend_${NODE_ENV}
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - farmacia_network
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://127.0.0.1 || exit 1"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.docker.network=dokploy-network"

volumes:
  postgres_data:
    driver: local

networks:
  farmacia_network:
    driver: bridge
  dokploy-network:
    external: true